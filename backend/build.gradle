plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'com.diffplug.spotless' version '6.20.0'
	id 'checkstyle'
}

group = 'com.fake_orgasm'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.json', name: 'json', version: '20230618'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'


	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation(platform('org.junit:junit-bom:5.10.0'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}

	java {
		importOrder()
		removeUnusedImports()
		cleanthat()
		palantirJavaFormat()
		formatAnnotations()
	}
}
