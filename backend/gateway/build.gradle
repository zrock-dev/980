plugins {
	id 'java'
	id 'com.diffplug.spotless' version '6.20.0'
	id 'checkstyle'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.fake_orgasm'
version = '0.0.1-SNAPSHOT-GATEWAY'

java {
	sourceCompatibility = '17'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}
ext {
	set('springCloudVersion', "2022.0.4")
}
dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

	compileOnly 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'

	testImplementation(platform('org.junit:junit-bom:5.10.0'))
	testImplementation('org.junit.jupiter:junit-jupiter')

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.apache.httpcomponents.client5:httpclient5'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}

	java {
		importOrder()
		removeUnusedImports()
		cleanthat()
		palantirJavaFormat()
		formatAnnotations()
	}
}

// ignored tasks
checkstyleTest.enabled = false