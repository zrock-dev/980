#!/bin/bash

# Script: fake_orgasm.sh
# Description: This script provides options to build, pack, run, and manage microservices.
# Author: [Santiago C. Saavedra]
# Date: [07/09/2023]

build=false
run=false
pack=false
logging=false

while [[ $# -gt 0 ]]; do
  case "$1" in
    --build)
      build=true
      shift
      ;;
    --run)
      run=true
      shift
      ;;
    --pack)
      pack=true
      shift
      ;;
    --log)
      logging=true
      shift
      ;;
    --help)
      echo "Usage: $0 [--build] [--log] [--run] [--pack] <scripts_home>"
      echo "  --build   Build the microservices"
      echo "  --run     Run the microservices"
      echo "  --pack    Pack the binaries in a tar file"
      echo "  --log     Record stdout and stdin of the services while running"
      exit 0
      ;;
    *)
      break
      ;;
  esac
done

scripts_home=$1

binaries_folder=binaries
if ! [ -d "$binaries_folder" ]; then
  mkdir "$binaries_folder"
fi

# Build the microservices if the --build flag is set
if [ "$build" = true ]; then
  echo "Building"
  "$scripts_home"/build_services backend
fi

# Pack the binaries into a tar file if the --pack flag is set
if [ "$pack" = true ]; then
  echo "Packing"
  "$scripts_home"/pack_binaries "$binaries_folder" backend/*
fi

# Run the microservices if the --run flag is set
if [ "$run" = true ]; then
  if ![ -d "$binaries_folder" && -z $(ls -a "$binaries_folder")];then

  fi


  echo "Cleaning port: 8761"
  lsof -i :8761 | xargs -n 1 kill -9
  echo "Running"
  services_pids_file=services_pids.txt
  if [ "$logging" = true ]; then
    logs_folder=logs
    if ! [ -d "$logs_folder" ]; then
      mkdir "$logs_folder"
    fi
    "$scripts_home"/run_services --log "$scripts_home"/service_execution_order.txt "$binaries_folder" "$logs_folder" > "$services_pids_file"
  else
    "$scripts_home"/run_services "$scripts_home"/service_execution_order.txt "$binaries_folder" > "$services_pids_file"
  fi
  cat "$services_pids_file"
  tmp="$services_pids_file"
  awk '{ print $4 }' "$tmp" > "$services_pids_file"

  read -rp "Press enter to kill services"
  # Kill services based on PIDs in the services_pids_file
  while IFS= read -r line; do
    kill -9 "$line"
  done < "$services_pids_file"
  rm "$services_pids_file"
fi

exit 0
